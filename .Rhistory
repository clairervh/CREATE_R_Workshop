TEblocksAllptsD <- data.table(read.table(paste(blockfigpath,"Data/TEblocksAllptsD.csv",sep=""),header=TRUE,sep=","))
TEblocksAllptsD[,":="(Process="Denitrification",Rate=lnDenit,Temp=invTstd)]
TEblocksAllptsA <- data.table(read.table(paste(blockfigpath,"Data/TEblocksAllptsA.csv",sep=""),header=TRUE,sep=","))
TEblocksAllptsA[,":="(Process="Anammox",Rate=lnAmx,Temp=invTstd)]
TEblocksAll <- rbind(TEblocksAllptsD[,c("Date","Rep","Process","Temp","Rate"),with=F],TEblocksAllptsA[,c("Date","Rep","Process","Temp","Rate"),with=F])
TEblocksAll[,":="(fRepSep=as.factor(paste(Date,Rep,Process,sep="-")),fProcess=as.factor(Process),fTreatment=as.factor(Date))]
# Combined data
tempFieldAP <- AllFieldAP[,c("fProcess","Temp","Rate","fProcDate","fSite"),with=F]
setnames(tempFieldAP,old=c("fProcDate","fSite"),new=c("fRepSep","fTreatment"))
CombinedAP <- rbind(tempFieldAP[is.na(Rate)==F],TEblocksAll[,c("fProcess","Temp","Rate","fRepSep","fTreatment"),with=F])
setnames(CombinedAP,old="fRepSep",new="fProfile")
# For information: Minimum temperature used for anammox in microcosms (Arrhenius/Ea):
#  itKtotC(itKstdtoitK(max(TEblocksAllptsA$Temp)))  # 13.6 deg C
lmc=lmeControl(niterEM=5200, msMaxIter=5200)  # See Zuur p. 126
R2bothlme1 <- gls(Rate ~ 1 + Temp*fProcess, method = "REML", data = R2blocksBothAP, na.action=na.omit)
R2bothlme2 <- lme(Rate ~ 1 + Temp*fProcess, method = "REML", data = R2blocksBothAP, random = ~1 | fProcDate, na.action=na.omit)
R2bothlme2b <- lme(Rate ~ 1 + Temp*fProcess, method = "REML", data = R2blocksBothAP, random = ~1 | fDate, na.action=na.omit)
R2bothlme3 <- lme(Rate ~ 1 + Temp*fProcess, method = "REML", data = R2blocksBothAP, random = ~1 + Temp | fProcDate, control = lmc, na.action=na.omit)
R2bothlme3b <- lme(Rate ~ 1 + Temp*fProcess, method = "REML", data = R2blocksBothAP, random = ~1 + Temp | fDate, control = lmc, na.action=na.omit)
# Note that Date is treated as separate groups per process
summary(R2bothlme1)  # AIC=896.9, BIC=917
summary(R2bothlme2)  # AIC=307.7, BIC=331.7 // Number of observations = 411; Number of groups = 10
summary(R2bothlme3)  # AIC=275.4, BIC=307.5 // Number of observations = 411; Number of groups = 10
anova(R2bothlme1,R2bothlme2,R2bothlme3)
summary(R2bothlme3)  # AIC=275.4, BIC=307.5 // Number of observations = 411; Number of groups = 10
AllFieldlme1 <- gls(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, na.action=na.omit)
AllFieldlme2 <- lme(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, random = ~1 | fProcDate, na.action=na.omit)
AllFieldlme3 <- lme(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, random = ~1 + Temp | fProcDate, na.action=na.omit)
summary(AllFieldlme1) # AIC = 1053
summary(AllFieldlme2) # AIC = 338.8
summary(AllFieldlme3) # AIC = 294.4
anova(AllFieldlme1,AllFieldlme2,AllFieldlme3)  # both 1 vs 2 and 2 vs 3 are significant (p<0.0001)
summary(AllFieldlme3)  # Temp:fProcess is not significant (p=0.52), so drop the interaction
AllFieldlme4 <- update(AllFieldlme3, .~. - Temp:fProcess)
summary(AllFieldlme4) # AIC = 289.2; Temp:fSite is not significant (p=0.096), so drop the interaction
AllFieldlme5 <- update(AllFieldlme4, .~. - Temp:fSite)
summary(AllFieldlme5) # AIC=285.1; all main effects are significant.
anova(AllFieldlme1,AllFieldlme2,AllFieldlme3)  # both 1 vs 2 and 2 vs 3 are significant (p<0.0001)
Comblme1 <- gls(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment , method = "REML", data = CombinedAP)
Comblme2 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = CombinedAP, random = ~1 | fProfile)
Comblme3 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = CombinedAP, random = ~1 + Temp | fProfile)
summary(Comblme1) # AIC = 1459
summary(Comblme2) # AIC = 374
summary(Comblme3) # AIC = 324
AIC(Comblme1,Comblme2,Comblme3)
anova(Comblme1,Comblme2,Comblme3) # p-value for 2 vs 3 < 0.0001
# The best model is the one in which the slope and intercept of the replicates are allowed to vary.
# This still confirms variation among replicates and/or dates.
anova(Comblme3,type="marginal")
# All main effects and interactions are significant.
# Just to compare...remove Temp:fProcess or Temp:fTreatment and see what happens
Comblme4 <- update(Comblme3, .~. -Temp:fTreatment)
summary(Comblme4) # AIC = 303...that's interesting. It goes down.
anova(Comblme4,type="marginal")  # Temp:fProcess is no longer significant, although all other factors are.
Comblme5 <- update(Comblme3, .~. -Temp:fProcess)
summary(Comblme5) # AIC = 322  Also goes down, but not too much.
anova(Comblme5,type="marginal")  # Temp:fProcess p=0.0467, which is not convincing; I would drop it at this point.
Comblme6 <- update(Comblme5, .~. -Temp:fTreatment)
summary(Comblme6) # AIC = 298
anova(Comblme6,type="marginal")  # All treatments now significant at p<0.0001
AIC(Comblme1,Comblme2,Comblme3,Comblme4,Comblme5,Comblme6)
# This gives a warning: models are not all fitted to the same number of observations.
# However, if you look at the summary of each model, they all say: Number of Observations: 818 (and Number of Groups: 42)
# I found this, though:
# "In practice, if you have a data set with missing observations for some of the variables but not others,
# you can not compare models by comparing deviance (or AIC scores, as discussed just below)."
# (http://www.montana.edu/screel/Webpages/conservation%20biology/maximum_likelihood_and_model_selection.pdf)
# I wonder if this is the case because I don't have the same temperatures for all data sets, so the interaction pairs will be different.
anova(Comblme3,type="marginal")
summary(Comblme3) # AIC = 324
lmc=lmeControl(niterEM=10000, msMaxIter=10000)  # See Zuur p. 126
TElme1 <- gls(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess+ Temp:fTreatment , method = "REML", data = TEblocksAll)
TElme2 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = TEblocksAll, random = ~1 | fRepSep)
TElme3 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = TEblocksAll, random = ~1 + Temp | fRepSep, control = lmc)
summary(TElme1) # AIC = -23.9...turns out AIC values can be negative.
summary(TElme2) # AIC = -140
summary(TElme3) # AIC = -144.4
anova(TElme1,TElme2,TElme3) # p-value for 2 vs 3 is 0.015
# The best model is the one in which the slope and intercept of the replicates are allowed to vary.
anova(TElme3)
# Temp:fTreatment is not significant: p=0.2126; remove it.
TElme4 <- update(TElme3, .~. -Temp:fTreatment, control=lmc)
summary(TElme4) # AIC = =166
anova(TElme4)  # Temp:fProcess is still significant, as are all other factors.
AllFieldlme1 <- gls(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, na.action=na.omit)
AllFieldlme2 <- lme(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, random = ~1 | fProcDate, na.action=na.omit)
AllFieldlme3 <- lme(Rate ~ 1 + Temp + Site + fProcess + Temp:fSite + Temp:fProcess, method = "REML", data = AllFieldAP, random = ~1 + Temp | fProcDate, na.action=na.omit)
summary(AllFieldlme1) # AIC = 1053
summary(AllFieldlme2) # AIC = 338.8
summary(AllFieldlme3) # AIC = 294.4
anova(AllFieldlme1,AllFieldlme2,AllFieldlme3)  # both 1 vs 2 and 2 vs 3 are significant (p<0.0001)
# It is (still) best to use a model that allows the slope and intercept of the temp effect to vary by date.
# Continue with AllFieldlme3
summary(AllFieldlme3)  # Temp:fProcess is not significant (p=0.52), so drop the interaction
# Slope/Ea does not vary between denitrification and anammox
AllFieldlme4 <- update(AllFieldlme3, .~. - Temp:fProcess)
summary(AllFieldlme4) # AIC = 289.2; Temp:fSite is not significant (p=0.096), so drop the interaction
# Slope/Ea does not vary by site
AllFieldlme5 <- update(AllFieldlme4, .~. - Temp:fSite)
summary(AllFieldlme5) # AIC=285.1; all main effects are significant.
summary(AllFieldlme5) # AIC=285.1; all main effects are significant.
0.63505606^2
0.09242516^2
summary(Comblme6) # AIC = 298
lmc=lmeControl(niterEM=5200, msMaxIter=5200)  # See Zuur p. 126
TEDenitlme1 <- gls(Rate ~ 1 + Temp + fTreatment + Temp:fTreatment, method = "REML", data = TEblocksAll[Process=="Denitrification"])
TEDenitlme2 <- lme(Rate ~ 1 + Temp + fTreatment + Temp:fTreatment, method = "REML", data = TEblocksAll[Process=="Denitrification"], random = ~1 | fRepSep)
TEDenitlme3 <- lme(Rate ~ 1 + Temp + fTreatment + Temp:fTreatment, method = "REML", data = TEblocksAll[Process=="Denitrification"], random = ~1 + Temp | fRepSep, control = lmc)
summary(TEDenitlme1) # AIC = -95.2
summary(TEDenitlme2) # AIC = -168.7
summary(TEDenitlme3) # AIC = -173
anova(TEDenitlme1,TEDenitlme2,TEDenitlme3)
# The best model is the one in which both the slope and intercept vary by replicate.
# It doesn't seem like a huge change in AIC, but p=0.016; correct this (Zuur p. 123): 0.5*(1-pchisq( (2*(100.49894-96.37241)) ,1)) = 0.002 = significant.
anova(TEDenitlme3)
# The Temp:fTreatment interaction is not significant (p=0.013)
TEDenitlme4 <- update(TEDenitlme3, .~. - Temp:fTreatment)
summary(TEDenitlme4) # AIC = -193.28
anova(TEDenitlme4) #
# Change order of variables
TEDenitlme5 <- lme(Rate ~ 1 + fTreatment + Temp, method = "REML", data = TEblocksAll[Process=="Denitrification"], random = ~1 + Temp | fRepSep, control = lmc)
anova(TEDenitlme5)
anova(TEDenitlme5)
summary(TEDenitlme5)
summary(Comblme6) # AIC = 298
summary(Comblme3)
eacomp
source(paste(Rpath,"AnalyzeThermoblocks.R",sep="")) # Necessary to run the FunctionsPrep script
source(paste(Rpath,"AnalyzeThermoblocks_FunctionsPrep.R",sep=""))
eacomp
## Set paths
# R files for RI study
Rpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/Rfiles/"
# Output for thermoblock study
blockfigpath <- "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Thermoblock/"
# Output for baseline study
basefigpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Baseline/"
## Load required packages
require(car)
require(data.table)
##
## Dataframe sources:
##  easTE and easTEap come from "AnalyzeThermoblocks_Plots_TE12S.R"
easTEap <- read.table(paste(blockfigpath,"Data/easTEap.csv",sep=""),header=TRUE,sep=",")
easTEapmean <- read.table(paste(blockfigpath,"Data/easTEapmean.csv",sep=""),header=TRUE,sep=",")
##  eas comes from "AnalyzeThermoblocks_FunctionsPrep.R"
##     - This file also sets up the ea function to find Ea, linear intercept, and standard errors
eas <- read.table(paste(blockfigpath,"Data/eas.csv",sep=""),header=TRUE,sep=",")
eas
eas[site=="R2" & X!=1]
eas <- data.frame(eas)
eas[site=="R2" & X!=1]
eas[site=="R2"]
eas$site
eas[sitedate=="R2-1005"]
## Set paths
# R files for RI study
Rpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/Rfiles/"
# Output for thermoblock study
blockfigpath <- "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Thermoblock/"
# Output for baseline study
basefigpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Baseline/"
## Load required packages
require(car)
require(data.table)
##
## Dataframe sources:
##  easTE and easTEap come from "AnalyzeThermoblocks_Plots_TE12S.R"
easTEap <- read.table(paste(blockfigpath,"Data/easTEap.csv",sep=""),header=TRUE,sep=",")
easTEapmean <- read.table(paste(blockfigpath,"Data/easTEapmean.csv",sep=""),header=TRUE,sep=",")
##  eas comes from "AnalyzeThermoblocks_FunctionsPrep.R"
##     - This file also sets up the ea function to find Ea, linear intercept, and standard errors
eas <- read.table(paste(blockfigpath,"Data/eas.csv",sep=""),header=TRUE,sep=",")
is.data.table(eas)
eas <- data.table(eas)
is.data.table(eas)
eas[site=="R2"]
eas[site=="R2" & sitedate!="R2-1005"]
eas[site=="R2" & sitedate!="R2-1005"]$Ea
mean(c(eas[site=="R2" & sitedate!="R2-1005"]$Ea))
mean(c(eas[site=="R2" & sitedate!="R2-1005"]$Ea_A))
## Set paths
# R files for RI study
Rpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/Rfiles/"
# Output for thermoblock study
blockfigpath <- "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Thermoblock/"
# Output for baseline study
basefigpath = "/Users/lindsay/Documents/Brown/Projects/TempEstuarineSedimentN/Isotopes/OutputFigures/Baseline/"
## Run these the first time, and ignore errors (NaNs and plotting errors)
source(paste(Rpath,"AnalyzeThermoblocks.R",sep="")) # Necessary to run the FunctionsPrep script
source(paste(Rpath,"AnalyzeThermoblocks_FunctionsPrep.R",sep=""))
## Load required packages
require(car)
require(data.table)
require(plyr)
require(nlme)
require(lsmeans)
require(multcompView)
##
## Read files (output from AnalyzeThermoblocks_Stats.R)
##
## Field study
## Note removal of NA value in RIS2 Anammox
R2blocksAP <- data.table(read.table(paste(blockfigpath,"Data/R2blocksAP.csv",sep=""),header=TRUE,sep=","))
R2blocksAP[,":="(fDate=as.factor(Date),Rate=lnDenitr,Temp=invTstd)]
R2blocksAAP <- data.table(read.table(paste(blockfigpath,"Data/R2blocksAAP.csv",sep=""),header=TRUE,sep=","))[is.na(lnAmx)==F]
R2blocksAAP[,":="(fDate=as.factor(Date),Rate=lnAmx,Temp=invTstd,ProcDate=paste(Process,Date))]
R2blocksBothAP <- data.table(read.table(paste(blockfigpath,"Data/R2blocksBothAP.csv",sep=""),header=TRUE,sep=","))
R2blocksBothAP[,":="(fDate=as.factor(Date),fProcDate=as.factor(ProcDate),Temp=invTstd,fProcess=as.factor(Process))]
PblocksAP <- data.table(read.table(paste(blockfigpath,"Data/PblocksAP.csv",sep=""),header=TRUE,sep=","))
PblocksAP[,":="(fDate=as.factor(Date),Rate=lnDenitr,Temp=invTstd)]
DenitblocksAP <- data.table(read.table(paste(blockfigpath,"Data/DenitblocksAP.csv",sep=""),header=TRUE,sep=","))
DenitblocksAP[,":="(fDate=as.factor(Date),fSite=as.factor(Site),Rate=lnDenitr,Temp=invTstd,ProcDate=paste(Process,Date))]
AllFieldAP <- rbind(R2blocksAAP[,c("Site","Process","Date","ProcDate","Temp","Rate"),with=F],DenitblocksAP[,c("Site","Process","Date","ProcDate","Temp","Rate"),with=F])
AllFieldAP[,":="(fProcDate=as.factor(ProcDate),fSite=as.factor(Site),fProcess=as.factor(Process))]
## TE
TEblocksAllptsD <- data.table(read.table(paste(blockfigpath,"Data/TEblocksAllptsD.csv",sep=""),header=TRUE,sep=","))
TEblocksAllptsD[,":="(Process="Denitrification",Rate=lnDenit,Temp=invTstd)]
TEblocksAllptsA <- data.table(read.table(paste(blockfigpath,"Data/TEblocksAllptsA.csv",sep=""),header=TRUE,sep=","))
TEblocksAllptsA[,":="(Process="Anammox",Rate=lnAmx,Temp=invTstd)]
TEblocksAll <- rbind(TEblocksAllptsD[,c("Date","Rep","Process","Temp","Rate"),with=F],TEblocksAllptsA[,c("Date","Rep","Process","Temp","Rate"),with=F])
TEblocksAll[,":="(fRepSep=as.factor(paste(Date,Rep,Process,sep="-")),fProcess=as.factor(Process),fTreatment=as.factor(Date))]
# Combined data
tempFieldAP <- AllFieldAP[,c("fProcess","Temp","Rate","fProcDate","fSite"),with=F]
setnames(tempFieldAP,old=c("fProcDate","fSite"),new=c("fRepSep","fTreatment"))
CombinedAP <- rbind(tempFieldAP[is.na(Rate)==F],TEblocksAll[,c("fProcess","Temp","Rate","fRepSep","fTreatment"),with=F])
setnames(CombinedAP,old="fRepSep",new="fProfile")
# For information: Minimum temperature used for anammox in microcosms (Arrhenius/Ea):
#  itKtotC(itKstdtoitK(max(TEblocksAllptsA$Temp)))  # 13.6 deg C
eas[site=="R2" & sitedate!="R2-1005"]
require(data.table)
eas[site=="R2" & sitedate!="R2-1005"]
Comblme1 <- gls(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment , method = "REML", data = CombinedAP)
Comblme2 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = CombinedAP, random = ~1 | fProfile)
Comblme3 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = CombinedAP, random = ~1 + Temp | fProfile)
summary(Comblme1) # AIC = 1459
summary(Comblme2) # AIC = 374
summary(Comblme3) # AIC = 324
anova(Comblme3,type="marginal")
lmc=lmeControl(niterEM=10000, msMaxIter=10000)  # See Zuur p. 126
TElme1 <- gls(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess+ Temp:fTreatment , method = "REML", data = TEblocksAll)
TElme2 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = TEblocksAll, random = ~1 | fRepSep)
TElme3 <- lme(Rate ~ 1 + Temp + fTreatment + fProcess + Temp:fProcess + Temp:fTreatment, method = "REML", data = TEblocksAll, random = ~1 + Temp | fRepSep, control = lmc)
summary(TElme1) # AIC = -23.9...turns out AIC values can be negative.
summary(TElme2) # AIC = -140
summary(TElme3) # AIC = -144.4
anova(TElme1,TElme2,TElme3) # p-value for 2 vs 3 is 0.015
# The best model is the one in which the slope and intercept of the replicates are allowed to vary.
anova(TElme3)
# Temp:fTreatment is not significant: p=0.2126; remove it.
TElme4 <- update(TElme3, .~. -Temp:fTreatment, control=lmc)
summary(TElme4) # AIC = =166
anova(TElme4)  # Temp:fProcess is still significant, as are all other factors.
summary(TElme4) # AIC = =166
0.16174096*0.16174096
0.03765947*0.03765947
summary(Comblme3) # AIC = 324
easTEap
easTEapmean
Toptplot <- read.table(paste(blockfigpath,"Data/Toptplot.csv",sep=""),header=TRUE,sep=",")
ToptplotTE <- read.table(paste(blockfigpath,"Data/ToptplotTE.csv",sep=""),header=TRUE,sep=",")
megaData <- read.table(paste(basefigpath,"megaData.csv",sep=""),header=TRUE,sep=",")
require(multcomp)
require(data.table)
require(ggplot2)
source("/Users/lindsay/Documents/ProgramHelp/R/Functions/lmp.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/pstar.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/r2.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/dig3.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/dig2.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/lmeq2.R"); source("/Users/lindsay/Documents/ProgramHelp/R/Functions/Q10.R")
# Error bars
source("/Users/lindsay/Documents/ProgramHelp/R/Functions/barplot_errbars.R")  # Error bars for barplot - function is error.bar
source("/Users/lindsay/Documents/ProgramHelp/R/Functions/errbarHoriz.R")  # Error bars for barplot - function is error.bar
##
## Find mean and sd of O2 fluxes (baseline study) for dates in this study
##
## Convert from umol cm-2 s-1 to umol cm-2 d-1
##     * 60s/min * 60min/h * 24h/day
TBFo2modR2 <- mean(data.table(megaData)[sitedate %in% c("R2-1101","R2-1106","R2-1107","R2-1109","R2-1203")]$Fo2mod,na.rm=T)*60*60*24
TBFo2modR2sd <- sd(data.table(megaData)[sitedate %in% c("R2-1101","R2-1106","R2-1107","R2-1109","R2-1203")]$Fo2mod,na.rm=T)*60*60*24
TBFo2modP <- mean(data.table(megaData)[sitedate %in% c("P-1106","P-1108","P-1201")]$Fo2mod,na.rm=T)*60*60*24
TBFo2modPsd <- sd(data.table(megaData)[sitedate %in% c("P-1106","P-1108","P-1201")]$Fo2mod,na.rm=T)*60*60*24
tres <- function(data) {x <- data$Temp ; ans <- (x[length(x)]-x[1])/(length(x)-1) ; return(ans)}
tresmean <- mean(c(tres(blockR2_1101),tres(blockR2_1106),tres(blockR2_1107),tres(blockR2_1109),tres(blockR2_1203)))
tressd <- sd(c(tres(blockR2_1101),tres(blockR2_1106),tres(blockR2_1107),tres(blockR2_1109),tres(blockR2_1203)))
tmin <- function(data) {ans <- min(data$Temp) ; return(ans)}
tminmean <- mean(c(tmin(blockR2_1101),tmin(blockR2_1106),tmin(blockR2_1107),tmin(blockR2_1109),tmin(blockR2_1203)))
tminsd <- sd(c(tmin(blockR2_1101),tmin(blockR2_1106),tmin(blockR2_1107),tmin(blockR2_1109),tmin(blockR2_1203)))
tmax <- function(data) {ans <- max(data$Temp) ; return(ans)}
tmaxmean <- mean(c(tmax(blockR2_1101),tmax(blockR2_1106),tmax(blockR2_1107),tmax(blockR2_1109),tmax(blockR2_1203)))
tmaxsd <- sd(c(tmax(blockR2_1101),tmax(blockR2_1106),tmax(blockR2_1107),tmax(blockR2_1109),tmax(blockR2_1203)))
# names(eas)
envtalcols <- c(3,5,7,9,11,12,13,14,17,20,21,22,23,24,25)
# names(eas)[envtalcols]
TBenvtal <- eas[,envtalcols]
##
## Compare some Eas
##
eacomp <- data.table(site=c(rep("R2",10),rep("P",3))
,proc=c(rep("Denit",5),rep("Amx",5),rep("Denit",3))
,group=c(rep("R2-Denit",5),rep("R2-Amx",5),rep("P-Denit",3))
,value=c(eas$Ea[2:6],eas$Ea_A[2:6],eas$Ea[7:9])
,sitedate=c(as.character(eas$sitedate[2:6]),as.character(eas$sitedate[2:6]),as.character(eas$sitedate[7:9]))
)
eacomp2 <- data.table(site=c(rep("R2",10),rep("P",3),rep("TE12S",15))
,proc=c(rep("Denit",5),rep("Amx",5),rep("Denit",3),rep("Denit",15))
,group=c(rep("R2-Denit",5),rep("R2-Amx",5),rep("P-Denit",3),rep("t0",3),rep("4",3),rep("4C",3),rep("17",3),rep("17C",3))  # TE12S with treatment
,group2=c(rep("R2-Denit",5),rep("R2-Amx",5),rep("P-Denit",3),rep("TE12S",15))  # All as TE-12S
,value=c(eas$Ea[2:6],eas$Ea_A[2:6],eas$Ea[7:9],-1*easTEap$Ea[1:3],-1*easTEap$Ea[4:6],-1*easTEap$Ea[7:9],-1*easTEap$Ea[10:12],-1*easTEap$Ea[13:15])
)
summary(aov(value~as.factor(group2),data=eacomp2)) # Not significant when all of TE12S is grouped together
summary(aov(value~as.factor(group),data=eacomp2)) # Not significant when TE12S is broken up by treatment
# Doesn't change (still no sig) if looking only within Denit data
summary(aov(value~as.factor(group),data=eacomp2[proc=="Denit"]))
summary(aov(value~as.factor(group2),data=eacomp2[proc=="Denit"]))
# As above, plus TE-12S anammox
eacomp3 <- data.table(site=c(rep("R2",10),rep("P",3),rep("TE12S",15),rep("TE12S",15))
,proc=c(rep("Denit",5),rep("Amx",5),rep("Denit",3),rep("Denit",15),rep("Amx",15))
,group=c(rep("R2-Denit",5),rep("R2-Amx",5),rep("P-Denit",3),rep("t0-Denit",3),rep("4-Denit",3),rep("4C-Denit",3),rep("17-Denit",3),rep("17C-Denit",3) ,rep("t0-Amx",3),rep("4-Amx",3),rep("4C-Amx",3),rep("17-Amx",3),rep("17C-Amx",3) )  # TE12S with treatment
,group2=c(rep("R2-Denit",5),rep("R2-Amx",5),rep("P-Denit",3),rep("TE12S-Denit",15),rep("TE12S-Amx",15))  # All as TE-12S, but split by process
,value=c(eas$Ea[2:6],eas$Ea_A[2:6],eas$Ea[7:9],-1*easTEap$Ea[1:3],-1*easTEap$Ea[4:6],-1*easTEap$Ea[7:9],-1*easTEap$Ea[10:12],-1*easTEap$Ea[13:15],-1*easTEap$EaA[1:15])
)
eacompTE <- data.table(Ea=c(easTEap$Ea,easTEap$EaA)
,Process=c(rep("Denit",15),rep("Amx",15))
,Treatment=as.character(rep(easTEap$Treatment,2))
,C=rep(easTEap$C,2)
,Temp=rep(easTEap$Temp,2)
)
eacomp2
eacompshort <- data.table(Experiment=c(rep("RI",5),rep("TE12S",15))
,Treatment=c(as.character(eas$site[2:6]),as.character(easTEap$Treatment))
,Ea=c((-1*eas$Ea[2:6]),easTEap$Ea)
,EaA=c((-1*eas$Ea_A[2:6]),easTEap$EaA)
,Color=c(R01col,R06col,R07col,R09col,R03col,rep(col0,3),rep(col4,3),rep(col4C,3),rep(col17,3),rep(col17C,3))
,Pch=c(rep(19,5),rep(21,15))
)
eacompshortmean <- data.table(Experiment=c(rep("RI",5),rep("TE12S",5))
,Treatment=c(as.character(eas$site[2:6]),as.character(easTEapmean$Treatment))
,Ea=c((-1*eas$Ea[2:6]),easTEapmean$Ea)
,EaA=c((-1*eas$Ea_A[2:6]),easTEapmean$EaA)
,Color=c(R01col,R06col,R07col,R09col,R03col,col0,col4,col4C,col17,col17C)
,Pch=c(rep(19,5),rep(19,5))
)
eacompshort
eacompshortmean
summary(Comblme3) # AIC = 324
exp(0.16)
ln(1.17)
log(1.17)
anova(Comblme3) # AIC = 324
summary(Comblme3) # AIC = 324
anova(Comblme3,type="marginal")
exp(1.04)
setwd("~/Documents/R/CREATE_R_Workshop/Lessons_Rmd")
setwd("~/Documents/R/CREATE_R_Workshop")
download.file(“https://ndownloader.figshare.com/files/2292169”, “Data/portal_data_joined.csv”)
download.file("https://ndownloader.figshare.com/files/2292169", "Data/portal_data_joined.csv")
surveys <- read.csv("Data/portal_data_joined.csv"")
surveys <- read.csv("Data/portal_data_joined.csv")
surveys
head(surveys)
colors <- c("red", "green", "blue", "yellow")
counts <- c(50, 60, 65, 82)
new_dataframe <- as.data.frame(cbind(colors, weights))
class(new_dataframe)
new_dataframe
colors
counts
new_dataframe <- as.data.frame(cbind(colors, counts))
new_dataframe
str(new_dataframe)
as.data.frame(cbind(colors, weights))
weights
?weights
str(new_dataframe)
class(new_dataframe)
class(counts)
class(counts)
class(colors)
as.data.frame(colors = colors, counts = counts)
data.frame(colors = colors, counts = counts)
surveys
surveys[year==1999]
str(surveys)
surveys[year==1999,]
surveys[1999,]
surveys["1999",]
surveys[,"month"]
surveys[[year==1999]]
summary(surveys)
str(surveys)
surveys_complete <- surveys_raw %>%
filter(species_id != “”,
!is.na(weight),
!is.na(hindfoot_length),
sex != “”)
surveys_complete <- surveys_raw %>%
filter(species_id != "",
!is.na(weight),
!is.na(hindfoot_length),
sex != "")
library(dplyr)
surveys_complete <- surveys_raw %>%
filter(species_id != "",
!is.na(weight),
!is.na(hindfoot_length),
sex != "")
surveys_complete <- surveys %>%
filter(species_id != "",
!is.na(weight),
!is.na(hindfoot_length),
sex != "")
species_counts <- surveys_complete %>%
group_by(species_id) %>%
tally %>%
filter(n >= 50) %>%
select(species_id)
head(species_counts)
surveys_complete %>%
group_by(species_id) %>%
tally %>%
filter(n >= 50)
frequent_species <- surveys_complete %>%
group_by(species_id) %>%
tally %>%
filter(n >= 50) %>%
select(species_id)
frequent_species$species_id
surveys_complete <- surveys_complete %>%
filter(species_id %in% frequent_species$species_id)
str(surveys_complete)
yearly_counts <- surveys_complete %>%
group_by(year, species_id) %>%
tally()
ggplot(data = yearly_counts, aes(x = year, y = n, group = species_id, color = species_id)) +
geom_line()
require(ggplot2)
ggplot(data = yearly_counts, aes(x = year, y = n, group = species_id, color = species_id)) +
geom_line()
ggplot(data = yearly_counts, aes(x = year, y = n, group = species_id) +
geom_line(aes(color=species_id))
)
ggplot(data = yearly_counts, aes(x = year, y = n, group = species_id)) +
geom_line(aes(color=species_id))
ggplot(data = yearly_counts, aes(x = year, y = n)) +
geom_line(aes(color=species_id, group = species_id))
ggplot(data = yearly_counts, aes(x = year, y = n, color = species_id)) +
geom_line() +
facet_wrap(~species_id)
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally
yearly_sex_counts
yearly_sex_counts <- surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
yearly_sex_counts
yearly_weight <- surveys_complete %>%
group_by(year, species_id, weight) %>%
tally
yearly_weight
yearly_weight <- surveys_complete %>%
group_by(year, species_id, weight) %>%
summarize(avg_weight = mean(weight, na.rm = TRUE))
yearly_weight
yearly_weight <- surveys_complete %>%
group_by(year, species_id) %>%
summarize(avg_weight = mean(weight, na.rm = TRUE))
yearly_weight
ggplot(data = yearly_weight, aes(x = year, y = weight, color = species_id, group = species_id)) +
geom_line() +
facet_wrap(~species_id) +
theme_bw()
yearly_weight <- surveys_complete %>%
group_by(year, species_id) %>%
summarize(weight = mean(weight, na.rm = TRUE))
ggplot(data = yearly_weight, aes(x = year, y = weight, color = species_id, group = species_id)) +
geom_line() +
facet_wrap(~species_id) +
theme_bw()
ggplot(data = yearly_weight, aes(x = year, y = weight, color = species_id)) +
geom_line() +
facet_wrap(~species_id) +
theme_bw()
yearly_sex_weight <- surveys_complete %>%
group_by(year, species_id, sex) %>%
summarize(avg_weight = mean(weight, na.rm = TRUE))
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
theme_bw()
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
facet_grid(. ~ sex)
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
facet_wrap(sex)
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
facet_wrap(~sex)
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
facet_grid(. ~ sex)  # split vertically/by row
ggplot(data = yearly_sex_weight, aes(x = year, y = avg_weight, color = species_id, group = species_id)) +
geom_line() +
facet_grid(sex ~ .)  # split vertically/by row
arial_grey_theme <-
theme(axis.text.x = element_text(color=“grey20”, size=12, angle=90, hjust=0.5, vjust=0.5),
axis.text.y = element_text(color=“grey20”, size=12),
text=element_text(size=16, family=“Arial”))
arial_grey_theme <-
theme(axis.text.x = element_text(color="grey20", size=12, angle=90, hjust=0.5, vjust=0.5),
axis.text.y = element_text(color="grey20", size=12),
text=element_text(size=16, family="Arial"))
ggplot(surveys_complete, aes(x = species_id, y = hindfoot_length)) +
geom_boxplot() +
arial_grey_theme
